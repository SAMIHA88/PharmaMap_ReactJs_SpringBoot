{"ast":null,"code":"var _jsxFileName = \"D:\\\\project city list backend front end\\\\React_CityList_with_SpringBoot-Backend-master\\\\Front-end\\\\React CityList\\\\src\\\\CityList.js\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityList = _ref => {\n  let {\n    cities\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Population\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: cities === null || cities === void 0 ? void 0 : cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: city.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: city.population\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)]\n      }, city.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = CityList;\nexport default CityList;\nvar _c;\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","CityList","_ref","cities","striped","bordered","hover","children","fileName","_jsxFileName","lineNumber","columnNumber","map","city","index","name","population","id","_c","$RefreshReg$"],"sources":["D:/project city list backend front end/React_CityList_with_SpringBoot-Backend-master/Front-end/React CityList/src/CityList.js"],"sourcesContent":["\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\n\n\nconst CityList = ({ cities }) => {\n    return (\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Population</th>\n                    {/* Add other column headers as needed */}\n                </tr>\n            </thead>\n            <tbody>\n                {cities?.map((city, index) => (\n                    <tr key={city.id}>\n                        <td>{index + 1}</td>\n                        <td>{city.name}</td>\n                        <td>{city.population}</td>\n                        {/* Add other data cells as needed */}\n                    </tr>\n                ))}\n            </tbody>\n        </Table>\n    );\n\n};\n\nexport default CityList;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,QAAQ,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAD,IAAA;EACxB,oBACIF,OAAA,CAACF,KAAK;IAACM,OAAO;IAACC,QAAQ;IAACC,KAAK;IAAAC,QAAA,gBACzBP,OAAA;MAAAO,QAAA,eACIP,OAAA;QAAAO,QAAA,gBACIP,OAAA;UAAAO,QAAA,EAAI;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACVX,OAAA;UAAAO,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACbX,OAAA;UAAAO,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAElB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,eACRX,OAAA;MAAAO,QAAA,EACKJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAES,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBd,OAAA;QAAAO,QAAA,gBACIP,OAAA;UAAAO,QAAA,EAAKO,KAAK,GAAG;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACpBX,OAAA;UAAAO,QAAA,EAAKM,IAAI,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACpBX,OAAA;UAAAO,QAAA,EAAKM,IAAI,CAACG;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA,GAHrBE,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAGhB,CAAC;AAACO,EAAA,GAxBIjB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}