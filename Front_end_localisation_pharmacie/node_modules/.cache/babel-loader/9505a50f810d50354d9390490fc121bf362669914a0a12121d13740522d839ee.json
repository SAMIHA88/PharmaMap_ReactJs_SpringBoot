{"ast":null,"code":"var _jsxFileName = \"D:\\\\project city list backend front end\\\\React_CityList_with_SpringBoot-Backend-master\\\\Front-end\\\\React CityList\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ZoneManagementComponent from './ZoneManagementComponent';\nimport { BrowserRouter, Switch, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst city = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [cityNom, setCityNom] = useState('');\n  const [cityId, setCityId] = useState('');\n\n  // Fonction pour récupérer la liste des cities depuis le backend\n  const fetchCities = async () => {\n    try {\n      const response = await axios.get(`/ville/all`);\n      setCities(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getCityById = async cityId => {\n    try {\n      const response = await axios.get(`/ville/${cityId}`);\n      const cit = cities.filter(city => city.id === cityId);\n      setCityNom(response.data.nom);\n      setCityId(response.data.id);\n      document.getElementById(\"cityname\").value = response.data.nom;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const addCity = async () => {\n    try {\n      const response = await axios.post('ville/save', {\n        nom: cityNom\n      });\n      setCities([cities, response.data]);\n      setCityNom(cityNom);\n    } catch (error) {\n      console.error(error);\n    }\n    fetchCities();\n  };\n  const deleteCity = async id => {\n    try {\n      await axios.delete(`/ville/delete/${id}`);\n      const updatedCities = cities.filter(city => city.id !== id);\n      setCities(updatedCities);\n    } catch (error) {\n      console.error(error);\n    }\n    fetchCities();\n  };\n  const updateCity = async cityId => {\n    try {\n      const response = await axios.put(`/ville/update/${cityId}`, {\n        nom: cityNom\n      });\n      const updatedCities = cities.map(city => {\n        if (city.id === response.data.id) {\n          return response.data;\n        }\n        return city;\n      });\n      setCityId('');\n      setCityNom('');\n      setCities(updatedCities);\n    } catch (error) {\n      console.error(error);\n    }\n    fetchCities();\n    document.getElementById(\"cityname\").value = '';\n  };\n  useEffect(() => {\n    fetchCities();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: city.nom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-sm mx-1\",\n              onClick: () => getCityById(city.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => deleteCity(city.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, city.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mr-2 d-inline-block\",\n        id: \"cityname\",\n        onChange: e => setCityNom(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), cityId ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => updateCity(cityId),\n        children: \"Update City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: addCity,\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(city, \"8vg/r+Tv8PlzZt+atFBMPDKwJVs=\");\nexport default city;","map":{"version":3,"names":["React","useState","useEffect","axios","ZoneManagementComponent","BrowserRouter","Switch","Route","Routes","jsxDEV","_jsxDEV","city","_s","cities","setCities","cityNom","setCityNom","cityId","setCityId","fetchCities","response","get","data","error","console","getCityById","cit","filter","id","nom","document","getElementById","value","addCity","post","deleteCity","delete","updatedCities","updateCity","put","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","scope","index","onClick","type","onChange","e","target"],"sources":["D:/project city list backend front end/React_CityList_with_SpringBoot-Backend-master/Front-end/React CityList/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ZoneManagementComponent from './ZoneManagementComponent';\nimport { BrowserRouter, Switch, Route, Routes } from 'react-router-dom';\nconst city = () => {\n    const [cities, setCities] = useState([]);\n    const [cityNom, setCityNom] = useState('');\n    const [cityId, setCityId] = useState('');\n\n    // Fonction pour récupérer la liste des cities depuis le backend\n    const fetchCities = async () => {\n        try {\n            const response = await axios.get(`/ville/all`);\n            setCities(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const getCityById = async (cityId) => {\n        try {\n            const response = await axios.get(`/ville/${cityId}`);\n            const cit=cities.filter((city) => city.id === cityId);\n            setCityNom(response.data.nom);\n            setCityId(response.data.id)\n            document.getElementById(\"cityname\").value=response.data.nom;\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const addCity = async () => {\n        try {\n            const response = await axios.post('ville/save', { nom: cityNom });\n            setCities([cities, response.data]);\n            setCityNom(cityNom);\n        } catch (error) {\n            console.error(error);\n        }\n        fetchCities();\n    };\n    const deleteCity = async (id) => {\n        try {\n            await axios.delete(`/ville/delete/${id}`);\n            const updatedCities = cities.filter((city) => city.id !== id);\n            setCities(updatedCities);\n        } catch (error) {\n            console.error(error);\n        }\n        fetchCities();\n    };\n    const updateCity = async (cityId) => {\n        try {\n            const response = await axios.put(`/ville/update/${cityId}`, { nom: cityNom });\n            const updatedCities = cities.map((city) => {\n                if (city.id === response.data.id) {\n                    return response.data;\n                }\n                return city;\n            });\n            setCityId('');\n            setCityNom('');\n            setCities(updatedCities);\n            \n        } catch (error) {\n            console.error(error);\n        }\n        fetchCities();\n        document.getElementById(\"cityname\").value='';\n        \n    };\n    useEffect(() => {\n        fetchCities();\n    }, []);\n    return (\n        <div className=\"container mt-4\">\n            <h1>Cities</h1>           \n            <table className=\"table mt-3\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Nom</th>\n                        <th scope=\"col\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {cities.map((city, index) => (\n                        <tr key={city.id}>\n                            <th scope=\"row\">{index + 1}</th>\n                            <td>{city.nom}</td>\n                            <td>\n                                <button className=\"btn btn-primary btn-sm mx-1\" onClick={() =>\n                                    getCityById(city.id)}>\n                                    Edit\n                                </button>\n                                <button className=\"btn btn-danger btn-sm\" onClick={() =>\n                                    deleteCity(city.id)}>\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"mt-3\">\n                <input\n                    type=\"text\"\n                    className=\"form-control mr-2 d-inline-block\"\n                    id=\"cityname\"\n                    onChange={(e) => setCityNom(e.target.value)}\n                />\n                {cityId ? (\n                    <button className=\"btn btn-success\" onClick={() => updateCity(cityId)}>\n                        Update City\n                    </button>\n                ) : (\n                    <button className=\"btn btn-primary\" onClick={addCity}>\n                        Add City\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\nexport default city;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}