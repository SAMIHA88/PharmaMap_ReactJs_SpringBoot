{"ast":null,"code":"var _jsxFileName = \"D:\\\\project city list backend front end\\\\React_CityList_with_SpringBoot-Backend-master\\\\Front-end\\\\React CityList\\\\src\\\\City.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CityList from './CityList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst City = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    // Effectuez l'appel API pour récupérer la liste des villes \n    axios.get('/api/cities').then(response => setCities(response.data)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"City List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(CityList, {\n      cities: cities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 2\n  }, this);\n};\n_s(City, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n_c = City;\nexport default City;\nvar _c;\n$RefreshReg$(_c, \"City\");","map":{"version":3,"names":["React","useState","useEffect","axios","CityList","jsxDEV","_jsxDEV","City","_s","cities","setCities","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project city list backend front end/React_CityList_with_SpringBoot-Backend-master/Front-end/React CityList/src/City.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport axios from 'axios'; \nimport CityList from './CityList'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n \nconst City = () => { \n const [cities, setCities] = useState([]); \n \n useEffect(() => { \n // Effectuez l'appel API pour récupérer la liste des villes \n axios.get('/api/cities') \n .then(response => setCities(response.data)) \n .catch(error => console.error(error)); \n }, []); \n \n return ( \n <div> \n <h1>City List</h1> \n <CityList cities={cities} /> \n </div> \n ); \n}; \n \nexport default City;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IAChB;IACAC,KAAK,CAACQ,GAAG,CAAC,aAAa,CAAC,CACvBC,IAAI,CAACC,QAAQ,IAAIH,SAAS,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACAV,OAAA;IAAAY,QAAA,gBACAZ,OAAA;MAAAY,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClBhB,OAAA,CAACF,QAAQ;MAACK,MAAM,EAAEA;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtB;AAEP,CAAC;AAACd,EAAA,CAhBID,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAkBV,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}