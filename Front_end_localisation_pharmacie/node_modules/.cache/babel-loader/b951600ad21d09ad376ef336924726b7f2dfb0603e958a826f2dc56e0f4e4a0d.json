{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst Pharmacy = () => {\n  _s();\n  const [pharmacies, setPharmacy] = useState([]);\n  const [pharmacyNom, setPharmacyNom] = useState('');\n  const [pharmacyZoneId, setPharmacyZoneId] = useState('');\n  const [cities, setCities] = useState([]);\n\n  // Function to fetch the list of zones from the backend\n  const fetchPharmacies = async () => {\n    try {\n      const response = await axios.get('/api/pharmacies/all');\n      setPharmacy(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Function to fetch the list of cities from the backend\n  const fetchCities = async () => {\n    try {\n      const response = await axios.get('/api/villes/all');\n      setCities(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n_s(Pharmacy, \"divgPeVJtA6rqUfRHlMkT9cpZYQ=\");\n_c = Pharmacy;\nexport default Pharmacy;\nvar _c;\n$RefreshReg$(_c, \"Pharmacy\");","map":{"version":3,"names":["React","useState","useEffect","axios","Pharmacy","_s","pharmacies","setPharmacy","pharmacyNom","setPharmacyNom","pharmacyZoneId","setPharmacyZoneId","cities","setCities","fetchPharmacies","response","get","data","error","console","fetchCities","_c","$RefreshReg$"],"sources":["D:/project city list backend front end/React_CityList_with_SpringBoot-Backend-master/Front-end/React CityList/src/Pharmacy.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Pharmacy = () => {\n  const [pharmacies, setPharmacy] = useState([]);\n  const [pharmacyNom, setPharmacyNom] = useState('');\n  const [pharmacyZoneId, setPharmacyZoneId] = useState('');\n  const [cities, setCities] = useState([]);\n\n\n  // Function to fetch the list of zones from the backend\n  const fetchPharmacies = async () => {\n    try {\n      const response = await axios.get('/api/pharmacies/all');\n      setPharmacy(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Function to fetch the list of cities from the backend\n  const fetchCities = async () => {\n    try {\n      const response = await axios.get('/api/villes/all');\n      setCities(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport default Pharmacy;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAGxC;EACA,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,qBAAqB,CAAC;MACvDT,WAAW,CAACQ,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iBAAiB,CAAC;MACnDH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;AACH,CAAC;AAAAb,EAAA,CA1BKD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}