{"ast":null,"code":"var _jsxFileName = \"D:\\\\project city list backend front end\\\\React_CityList_with_SpringBoot-Backend-master\\\\Front-end\\\\React CityList\\\\src\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, Marker, LoadScript, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [villes, setVilles] = useState([]);\n  const [zones, setZones] = useState([]);\n  const [selectedVille, setSelectedVille] = useState('');\n  const [selectedZone, setSelectedZone] = useState('');\n  const [pharmacies, setPharmacies] = useState([]);\n  const [selectedPharmacy, setSelectedPharmacy] = useState(null);\n  const [selectedPharmacyPosition, setSelectedPharmacyPosition] = useState(null);\n  const [directions, setDirections] = useState(null);\n  const [showDirections, setShowDirections] = useState(false);\n  useEffect(() => {\n    fetchVilles();\n  }, []);\n  useEffect(() => {\n    if (selectedVille) {\n      fetchZonesByVille();\n    }\n  }, [selectedVille]);\n  const fetchVilles = async () => {\n    try {\n      const response = await axios.get('/api/villes/all');\n      setVilles(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchZonesByVille = async () => {\n    try {\n      const response = await axios.get(`/api/villes/${selectedVille}/zones`);\n      setZones(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const searchPharmacies = async () => {\n    try {\n      const response = await axios.get(`/api/pharmacies/byZone/${selectedZone}`);\n      setPharmacies(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleVilleChange = e => {\n    setSelectedVille(e.target.value);\n    setSelectedZone('');\n    setZones([]);\n  };\n  const handleZoneChange = e => {\n    setSelectedZone(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedZone) {\n      searchPharmacies();\n    }\n  };\n  const handlePharmacyClick = pharmacy => {\n    setSelectedPharmacy(pharmacy);\n    setSelectedPharmacyPosition({\n      lat: parseFloat(pharmacy.latitude),\n      lng: parseFloat(pharmacy.longitude)\n    });\n    setShowDirections(true);\n  };\n  const directionsCallback = response => {\n    if (response !== null) {\n      if (response.status === 'OK') {\n        setDirections(response);\n      } else {\n        console.error('Directions request failed with status: ', response.status);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-g font-big1 slide-in-top\",\n      children: \"recherche des pharmacies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), pharmacies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-m\",\n        children: \"Localisation :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: \"AIzaSyB5elPgCtl5JlcrQBgMQxWUFjnI7eUYZ7U\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          center: selectedPharmacyPosition || {\n            lat: 0,\n            lng: 0\n          },\n          zoom: 12,\n          mapContainerStyle: {\n            height: '400px',\n            width: '100%'\n          },\n          children: [pharmacies.map(pharmacy => /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: parseFloat(pharmacy.latitude),\n              lng: parseFloat(pharmacy.longitude)\n            },\n            onClick: () => handlePharmacyClick(pharmacy)\n          }, pharmacy.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)), showDirections && /*#__PURE__*/_jsxDEV(DirectionsService, {\n            options: {\n              destination: selectedPharmacyPosition,\n              origin: {\n                lat: 31.6294,\n                lng: -8.0797\n              },\n              // Replace with your fixed position coordinates\n              travelMode: 'DRIVING'\n            },\n            callback: directionsCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n            directions: directions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"y/PwFhk/WiH+PZVXQeHJwLkHSDw=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","GoogleMap","Marker","LoadScript","DirectionsService","DirectionsRenderer","jsxDEV","_jsxDEV","Search","_s","villes","setVilles","zones","setZones","selectedVille","setSelectedVille","selectedZone","setSelectedZone","pharmacies","setPharmacies","selectedPharmacy","setSelectedPharmacy","selectedPharmacyPosition","setSelectedPharmacyPosition","directions","setDirections","showDirections","setShowDirections","fetchVilles","fetchZonesByVille","response","get","data","error","console","searchPharmacies","handleVilleChange","e","target","value","handleZoneChange","handleSubmit","preventDefault","handlePharmacyClick","pharmacy","lat","parseFloat","latitude","lng","longitude","directionsCallback","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","length","googleMapsApiKey","center","zoom","mapContainerStyle","height","width","map","position","onClick","id","options","destination","origin","travelMode","callback","_c","$RefreshReg$"],"sources":["D:/project city list backend front end/React_CityList_with_SpringBoot-Backend-master/Front-end/React CityList/src/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { GoogleMap, Marker, LoadScript, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './App.css';\r\n\r\nconst Search = () => {\r\n  const [villes, setVilles] = useState([]);\r\n  const [zones, setZones] = useState([]);\r\n  const [selectedVille, setSelectedVille] = useState('');\r\n  const [selectedZone, setSelectedZone] = useState('');\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [selectedPharmacy, setSelectedPharmacy] = useState(null);\r\n  const [selectedPharmacyPosition, setSelectedPharmacyPosition] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [showDirections, setShowDirections] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchVilles();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedVille) {\r\n      fetchZonesByVille();\r\n    }\r\n  }, [selectedVille]);\r\n\r\n  const fetchVilles = async () => {\r\n    try {\r\n      const response = await axios.get('/api/villes/all');\r\n      setVilles(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const fetchZonesByVille = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/villes/${selectedVille}/zones`);\r\n      setZones(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchPharmacies = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/pharmacies/byZone/${selectedZone}`);\r\n      setPharmacies(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleVilleChange = (e) => {\r\n    setSelectedVille(e.target.value);\r\n    setSelectedZone('');\r\n    setZones([]);\r\n  };\r\n\r\n  const handleZoneChange = (e) => {\r\n    setSelectedZone(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (selectedZone) {\r\n      searchPharmacies();\r\n    }\r\n  };\r\n\r\n  const handlePharmacyClick = (pharmacy) => {\r\n    setSelectedPharmacy(pharmacy);\r\n    setSelectedPharmacyPosition({\r\n      lat: parseFloat(pharmacy.latitude),\r\n      lng: parseFloat(pharmacy.longitude),\r\n    });\r\n    setShowDirections(true);\r\n  };\r\n\r\n  const directionsCallback = (response) => {\r\n    if (response !== null) {\r\n      if (response.status === 'OK') {\r\n        setDirections(response);\r\n      } else {\r\n        console.error('Directions request failed with status: ', response.status);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"text-g font-big1 slide-in-top\">recherche des pharmacies</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* ... */}\r\n      </form>\r\n\r\n      {pharmacies.length > 0 && (\r\n        <div>\r\n          {/* ... */}\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <h3 className=\"font-m\">Localisation :</h3>\r\n        <LoadScript googleMapsApiKey=\"AIzaSyB5elPgCtl5JlcrQBgMQxWUFjnI7eUYZ7U\">\r\n          <GoogleMap\r\n            center={selectedPharmacyPosition || { lat: 0, lng: 0 }}\r\n            zoom={12}\r\n            mapContainerStyle={{ height: '400px', width: '100%' }}\r\n          >\r\n            {/* Display markers for pharmacies */}\r\n            {pharmacies.map((pharmacy) => (\r\n              <Marker\r\n                key={pharmacy.id}\r\n                position={{ lat: parseFloat(pharmacy.latitude), lng: parseFloat(pharmacy.longitude) }}\r\n                onClick={() => handlePharmacyClick(pharmacy)}\r\n              />\r\n            ))}\r\n\r\n            {/* Display directions */}\r\n            {showDirections && (\r\n              <DirectionsService\r\n                options={{\r\n                  destination: selectedPharmacyPosition,\r\n                  origin: { lat: 31.6294, lng: -8.0797 }, // Replace with your fixed position coordinates\r\n                  travelMode: 'DRIVING',\r\n                }}\r\n                callback={directionsCallback}\r\n              />\r\n            )}\r\n\r\n            {directions && <DirectionsRenderer directions={directions} />}\r\n          </GoogleMap>\r\n        </LoadScript>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}